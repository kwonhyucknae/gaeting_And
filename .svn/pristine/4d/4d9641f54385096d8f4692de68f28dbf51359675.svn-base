package com.gaetingdev.m.gaetingdev.Main.Temp;

import android.app.Activity;
import android.content.DialogInterface;
import android.content.Intent;
import android.os.Bundle;
import android.support.v7.app.AlertDialog;
import android.view.View;
import android.widget.Button;
import android.widget.TextView;

import com.facebook.login.LoginManager;
import com.gaetingdev.m.gaetingdev.Framework.DB.UseDB;
import com.gaetingdev.m.gaetingdev.Main.Contents.Adaption.Read_Adaption;
import com.gaetingdev.m.gaetingdev.Main.Contents.Adaption.Write_Adaption;
import com.gaetingdev.m.gaetingdev.Main.Contents.community.Community_Write;
import com.gaetingdev.m.gaetingdev.R;
import com.gaetingdev.m.gaetingdev.Register.SampleLoginActivity;
import com.gaetingdev.m.gaetingdev.Register.checkout;
import com.gaetingdev.m.gaetingdev.Register.kakao.KakaoSignupActivity;
import com.kakao.network.ErrorResult;
import com.kakao.usermgmt.UserManagement;
import com.kakao.usermgmt.callback.LogoutResponseCallback;
import com.kakao.usermgmt.callback.UnLinkResponseCallback;
import com.kakao.util.helper.log.Logger;

/**
 * Created by soooo on 2016-09-29.
 */
// 로그아웃과 탈퇴 test를 위한 클래스입니다. 현재 페북,카톡 로그아웃/카톡 로그아웃 구현 0929
public class LogoutNDrop extends Activity {
    UseDB db;
    int logintype;
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.logout_and_drop);

        db = new UseDB(LogoutNDrop.this);
        logintype = db.getType();

        Button btn_logout = (Button)findViewById(R.id.btn_logout);
        Button btn_drop = (Button)findViewById(R.id.btn_drop);
        Button btn_go_main = (Button)findViewById(R.id.btn_go_main);
        Button btn_go_adap=(Button)findViewById(R.id.btn_go_adaption);
        Button btn_go_read=(Button)findViewById(R.id.btn_go_readadaption);
        Button btn_go_com=(Button)findViewById(R.id.btn_go_write_commu);

        btn_logout.setOnClickListener(clickL);
        btn_drop.setOnClickListener(clickL);
        btn_go_main.setOnClickListener(clickL);
        btn_go_adap.setOnClickListener(clickL);
        btn_go_read.setOnClickListener(clickL);
        btn_go_com.setOnClickListener(clickL);

        TextView tv = (TextView)findViewById(R.id.textView);
        tv.setText(logintype + "");
    }

    Button.OnClickListener clickL = new View.OnClickListener() {
        public void onClick(View v) {

            switch(v.getId()) {
                case R.id.btn_logout:
                    if (logintype == 1){
                        logout_kakao();
                    }
                    else if (logintype == 2) {
                        logout_facegook();
                    }
                    db.updateDB(-1, "empty"); // DB 초기화
                    db.closeDB();
                    break;
                case R.id.btn_drop:
                    if (logintype == 1){
                        drop_kakao();
                    }
                    else if (logintype == 2) {
                        drop_facebook();
                    }
                    db.updateDB(-1, "empty"); // DB 초기화
                    db.closeDB();
                    break;
                case R.id.btn_go_main:
                    Intent intent = new Intent(LogoutNDrop.this, checkout.class);
                    intent.setFlags(Intent.FLAG_ACTIVITY_NO_ANIMATION);
                    startActivity(intent);
                    finish();
                    break;
                case R.id.btn_go_adaption:
                    Intent intent1=new Intent(LogoutNDrop.this, Write_Adaption.class);
                    startActivity(intent1);
                    finish();
                    break;
                case R.id.btn_go_readadaption:
                    Intent intent2=new Intent(LogoutNDrop.this, Read_Adaption.class);
                    startActivity(intent2);
                    finish();
                    break;
                case R.id.btn_go_write_commu:
                    Intent intent3=new Intent(LogoutNDrop.this, Community_Write.class);
                    startActivity(intent3);
                    finish();
            }

        }
    };

    public void logout_kakao(){
        UserManagement.requestLogout(new LogoutResponseCallback() {
            @Override
            public void onCompleteLogout() {
                Intent intent = new Intent(LogoutNDrop.this, KakaoSignupActivity.class);
                intent.setFlags(Intent.FLAG_ACTIVITY_NO_ANIMATION);
                startActivity(intent);
                finish();
            }
        });
    }

    public void logout_facegook(){
        UserManagement.requestLogout(new LogoutResponseCallback() {
            @Override
            public void onCompleteLogout() {
                Intent intent = new Intent(LogoutNDrop.this, KakaoSignupActivity.class);
                intent.setFlags(Intent.FLAG_ACTIVITY_NO_ANIMATION);
                startActivity(intent);
                finish();
            }
        });
        LoginManager.getInstance().logOut();
    }

    public void drop_kakao(){
        final String appendMessage = "drop?";
        new AlertDialog.Builder(LogoutNDrop.this)
                .setMessage(appendMessage)
                .setPositiveButton(getString(R.string.com_kakao_ok_button),
                        new DialogInterface.OnClickListener() {
                            @Override
                            public void onClick(DialogInterface dialog, int which) {
                                UserManagement.requestUnlink(new UnLinkResponseCallback() {
                                    @Override
                                    public void onFailure(ErrorResult errorResult) {
                                        Logger.e(errorResult.toString());
                                    }

                                    @Override
                                    public void onSessionClosed(ErrorResult errorResult) {
                                        drop_result("SampleLoginActivity");
                                    }

                                    @Override
                                    public void onNotSignedUp() {
                                        drop_result("KakaoSignupActivity");
                                    }

                                    @Override
                                    public void onSuccess(Long userId) {
                                        drop_result("SampleLoginActivity");
                                    }
                                });
                                dialog.dismiss();
                            }
                        })
                .setNegativeButton(getString(R.string.com_kakao_cancel_button),
                        new DialogInterface.OnClickListener() {
                            @Override
                            public void onClick(DialogInterface dialog, int which) {
                                dialog.dismiss();
                            }
                        }).show();
    }

    public void drop_facebook(){
        //아직 구현 안했어요
    }

    public void drop_result(String activity){
        Intent intent;
        if (activity.equals("SampleLoginActivity")) {
            intent = new Intent(LogoutNDrop.this, SampleLoginActivity.class);
        }
        else {
            intent = new Intent(LogoutNDrop.this, KakaoSignupActivity.class);
        }
        intent.setFlags(Intent.FLAG_ACTIVITY_NO_ANIMATION);
        startActivity(intent);
        finish();
    }

}
