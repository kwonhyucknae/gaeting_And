package com.gaetingdev.m.gaetingdev.Register;

import android.Manifest;
import android.app.Activity;
import android.content.Context;
import android.content.DialogInterface;
import android.content.Intent;
import android.content.pm.PackageManager;
import android.net.Uri;
import android.os.Bundle;
import android.os.Handler;
import android.os.Message;
import android.util.Log;
import android.view.View;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.Toast;

import com.gaetingdev.m.gaetingdev.Framework.File.FileManager;
import com.gaetingdev.m.gaetingdev.Framework.Image.ImageAdapter;
import com.gaetingdev.m.gaetingdev.Framework.Permission.PermManager;
import com.gaetingdev.m.gaetingdev.Framework.File.FileTransfer;
import com.gaetingdev.m.gaetingdev.Main.FragmentTest;
import com.gaetingdev.m.gaetingdev.R;
import com.gaetingdev.m.gaetingdev.Register.Ajax.RegisterAjax;

import java.util.HashMap;
import java.util.LinkedList;


/**
 * Created by x-note on 2016-10-02.
 */
public class SignupProcess_Image extends Activity implements View.OnClickListener {

    //region 변수 선언
    private static final String TAG = "SignupProcess_Image_TEST";

    private static final int TAKE_CAMERA = 0;
    private static final int TAKE_GALLERY = 1;
    private static final int AFTER_CROP = 2;

    private Context mContext;

    //ajax
    private RegisterAjax ajax;

    private PermManager mPermManager;//권한매니저
    private FileTransfer mFileTransfer;//파일전송매니저
    private FileManager mFileManager;//파일입출력매니저
    private ImageAdapter mImageAdapter;//이미지처리매니저

    //이미지뷰
    private ImageView img0;
    private ImageView img1;
    private ImageView img2;

    //버튼
    private Button btn;

    //사진 찍기, 갤러리 조회에 필요한 권한
    private String[] requestPermission = new String[]{Manifest.permission.CAMERA, Manifest.permission.READ_EXTERNAL_STORAGE, Manifest.permission.WRITE_EXTERNAL_STORAGE};

    //선택한 사진들의 경로
    private HashMap<Integer, String> mProfilePath = new HashMap<>();

    //ImageView 아이디 배열
    private int[] mimageViews = {R.id.img0, R.id.img1, R.id.img2};

    //선택된 ImageView 아이디
    private int mimageViewId = 0;

    //유저 아이디 >> 하드코딩
    private String mUserID = "xnote";

    //endregion

    //region 생명주기 관련 함수
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.signupprocess_image);

        //Handler에서 context
        this.mContext = this;
        ajax = new RegisterAjax(this);
        mPermManager = new PermManager(this);
        mFileManager = new FileManager(FileManager.FileType.image);
        mImageAdapter = new ImageAdapter(this);
        mFileTransfer =  new FileTransfer(this);

        /* 이미지 뷰 세팅 */
        img0 = (ImageView) findViewById(mimageViews[0]);
        img1 = (ImageView) findViewById(mimageViews[1]);
        img2 = (ImageView) findViewById(mimageViews[2]);
        img0.setOnClickListener(this);
        img1.setOnClickListener(this);
        img2.setOnClickListener(this);

        /* 전송 버튼 세팅 */
        btn = (Button) findViewById(R.id.btn);
        btn.setOnClickListener(this);
    }

    @Override
    protected void onDestroy() {
        super.onDestroy();

        //앱을 종료할 때 Temp파일 모두 삭제
        mFileManager.deleteTempDir();
    }
    //endregion

    //region 클릭 이벤트 핸들러 세팅
    @Override
    public void onClick(View v) {

        //이미지 버튼일 때
        if(v.getId() == R.id.img0 || v.getId() == R.id.img1 || v.getId() == R.id.img2)
        {
            //선택한 이미지뷰 아이디 저장
            mimageViewId = v.getId();

            //카메라, 앨범, 취소 다이얼로그 띄우기
            showImageDialog();
        }
        //전송 버튼일 때
        else if(v.getId() == R.id.btn)
        {
            //사진을 올바르게 넣었는지 확인
            if(checkProfileImages())
            {
                //파일 업로드
                fileUpload();
            }

        }
    }
    //endregion

    //region 이미지 클릭 관련 함수

    // 카메라, 앨범, 취소 다이얼로그 SHOW
    private void showImageDialog(){

        mImageAdapter.showDialogWithGalleryNCamera(
                new DialogInterface.OnClickListener() {
                    public void onClick(DialogInterface dialog, int id) {

                        boolean checkPermission = mPermManager.checkPermission(requestPermission, id);
                        if(checkPermission){
                            mImageAdapter.getPicture(id);
                        }

                        dialog.dismiss();

                    }
                }
        );

    }

    //권한이 등록되어있지 않았다면 사용자에게 권한 요청 후 결과받아오기
    @Override
    public void onRequestPermissionsResult(int requestCode, String[] permissions, int[] grantResults) {
        //권한 결과 체크

        //요청한 권한이 있을 때
        if(grantResults.length > 0){
            boolean permission = true;
            for(int i=0; i<grantResults.length; i++){
                //하나라도 권한이 DENIED라면 false
                if(grantResults[i] == PackageManager.PERMISSION_DENIED){
                    permission = false;
                }
            }

            //permission이 모두 GRANTED일 때
            if(permission){
                mImageAdapter.getPicture(requestCode);
            } else {
                Toast.makeText(this, "이 기능을 실행하기 위해서는 권한이 필요합니다.", Toast.LENGTH_SHORT).show();
            }
        }

    }

    //이미지 RESULT 함수
    protected void onActivityResult( int requestCode, int resultCode, Intent data )   {
        if( resultCode == RESULT_OK )
        {
            Uri mImageCaptureUri;
            switch (requestCode){
                // 앨범에서 가져올 때
                case TAKE_GALLERY:
                    // 카메라 촬영 시
                case TAKE_CAMERA:
                    //Crop한 이미지를 저장할 Temp파일 생성
                    mImageCaptureUri = mFileManager.createTempFile(mImageAdapter.getRealPathFromURI(data.getData(), this));
                    mImageAdapter.cropImageFromUri(AFTER_CROP, mImageCaptureUri);
                    break;
                // 잘라내기 후
                case AFTER_CROP:
                    //잘려진 이미지 경로 받아오기
                    mImageCaptureUri = data.getData();

                    ImageView clickImageView = null;
                    //선택했던 이미지뷰에 이미지 설정
                    clickImageView = (ImageView) findViewById(mimageViewId);
                    mImageAdapter.setAlbumImage( mImageCaptureUri.getPath(), clickImageView );

                    //이미지 경로 저장
                    mProfilePath.put(mimageViewId, mImageCaptureUri.getPath());
            }
        }
    }

    //endregion

    //region 다음 클릭 관련 함수

    //대표이미지 첨부하였는지 체크
    private boolean checkProfileImages(){
        boolean result = true;

        //조건추가
        //if()

        return result;
    }

    //파일 업로드 함수
    private void fileUpload(){

        //파일 추가
        String file_path;
        for(int i=0; i<mimageViews.length; i++){
            file_path = mProfilePath.get(mimageViews[i]);
            if(mProfilePath.get(mimageViews[i]) != null)
            {
                mFileTransfer.AddFile(file_path, mUserID+"_"+i+".jpg");
            }
        }

        //파일 전송
        mFileTransfer.fileTransferWithPath(new Handler() {
            //파일 전송 결과 Handler
            public void handleMessage(Message msg) {
                switch(msg.what) {
                    //파일 전송 중 에러 발생시
                    case -1:
                        //에러메세지 출력
                        ((Exception)msg.obj).printStackTrace();
                        break;
                    //정상 처리시
                    case 0:
                        fileUploadComplete();
                        break;
                }
            }
        });
    }

    //파일이 모두 업로드 됐으면 메인으로 이동
    private void fileUploadComplete(){

        //Temp 파일 모두 삭제
        mFileManager.deleteTempDir();

//        ajax.setUserProfileImage("", new AjaxCallback<String>(){
//            @Override
//            public void callback(String url, String result, AjaxStatus status) {
//                if(result != null) {
//                    if(result.equals("OK")){
//                        Intent intent = new Intent(mContext, MainActivity.class);
//                        intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
//                        mContext.startActivity(intent);
//                        ((Activity)mContext).finish();
//                    }
//                }
//            }
//        });

        Intent intent = new Intent(mContext, FragmentTest.class);
        intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
        mContext.startActivity(intent);
        ((Activity)mContext).finish();
    }

    //endregion

}
